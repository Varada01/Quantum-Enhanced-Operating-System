qstruct SchedulerVars {
  latency: qnum<3>;
  energy: qnum<2>;
  throughput: qnum<2>;
}

qfunc apply_cost(gamma: real, v: SchedulerVars) {
  aux: qbit;
  within {
    aux = (v.latency + v.energy + v.throughput) <= 7;
  } apply {
    control (aux) {
      phase (-(v.latency + (2 * v.energy) + (3 * v.throughput)), gamma);
    }
  }
}

qfunc main(params: real[6], output v: SchedulerVars) {
  allocate(v);
  hadamard_transform(v);
  repeat (i: 3) {
    apply_cost(params[2 * i], v);
    apply_to_all(lambda(q) {
      RX(params[(2 * i) + 1], q);
    }, v);
  }
}



